{"version":3,"sources":["../../lib/runtime.js"],"names":["guard","value","Array","isArray","length","iter","obj","each","output","keys","Object","i","key","helper","context","helpers","helperName","args","out","apply","e","runtime","templateFunction","toString","module","exports","Promise","try","fn","resolve"],"mappings":"AAAA;;AAEA;;;;;;AAKA,SAASA,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAOA,SAAS,IAAT,IAAkBC,MAAMC,OAAN,CAAcF,KAAd,KAAwBA,MAAMG,MAAN,KAAiB,CAA3D,GAAgE,EAAhE,GAAqEH,KAA5E;AACD;;AAED;;;;;;AAMA,SAASI,IAAT,CAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvB,MAAI,CAACD,GAAD,IAAQ,OAAOA,GAAP,KAAe,QAA3B,EAAqC;AAAE,WAAO,EAAP;AAAY;;AAEnD,MAAIE,SAAS,EAAb;AACA,QAAMC,OAAOC,OAAOD,IAAP,CAAYH,GAAZ,CAAb;AACA,QAAMF,SAASK,KAAKL,MAApB;;AAEA,OAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIP,MAApB,EAA4BO,KAAK,CAAjC,EAAoC;AAClC,UAAMC,MAAMH,KAAKE,CAAL,CAAZ;AACAH,cAAUD,KAAKK,GAAL,EAAUD,CAAV,EAAaP,MAAb,EAAqBE,IAAIM,GAAJ,CAArB,CAAV;AACD;;AAED,SAAOJ,MAAP;AACD;;AAED;;;;;;;;AAQA,SAASK,MAAT,CAAgBC,OAAhB,EAAyBC,OAAzB,EAAkCC,UAAlC,EAA8CC,IAA9C,EAAoD;AAClD,MAAI,OAAOF,QAAQC,UAAR,CAAP,KAA+B,UAAnC,EAA+C;AAC7C,WAAO,EAAP;AACD;AACD,MAAI;AACF,UAAME,MAAMH,QAAQC,UAAR,EAAoBG,KAApB,CAA0BL,OAA1B,EAAmCG,IAAnC,CAAZ;AACA,WAAOC,OAAO,EAAd;AACD,GAHD,CAGE,OAAOE,CAAP,EAAU;AACV,WAAO,EAAP;AACD;AACF;;AAED;;;;;;;AAOA,SAASC,OAAT,CAAiBN,OAAjB,EAA0BD,OAA1B,EAAmCQ,gBAAnC,EAAqD;AACnD,SAAOtB,MAAMsB,iBAAiBP,OAAjB,EAA0BD,OAA1B,EAAmCd,KAAnC,EAA0CK,IAA1C,EAAgDQ,MAAhD,CAAN,EAA+DU,QAA/D,EAAP;AACD;;AAED;;AAEAC,OAAOC,OAAP,GAAiBJ,OAAjB;;AAEA;;AAEA;AACA,IAAI,OAAOK,QAAQC,GAAf,KAAuB,UAA3B,EAAuC;AACrCD,UAAQC,GAAR,GAAc;AACZA,QAAIC,EAAJ,EAAQ;AACN,aAAO,IAAIF,OAAJ,CAAYG,WAAWA,QAAQD,IAAR,CAAvB,CAAP;AACD;AAHW,IAIZD,GAJF;AAKD","file":"runtime.js","sourcesContent":["'use strict';\n\n/**\n * Convert null and undefined values to empty strings\n * @param {any} value\n * @returns {string}\n */\nfunction guard(value) {\n  return value == null || (Array.isArray(value) && value.length === 0) ? '' : value;\n}\n\n/**\n * Iterate over an object or array\n * @param {string[]} obj - Iteratee object / array\n * @param {function} each - Callback to execute on each item\n * @return {string}\n */\nfunction iter(obj, each) {\n  if (!obj || typeof obj !== 'object') { return ''; }\n\n  let output = '';\n  const keys = Object.keys(obj);\n  const length = keys.length;\n\n  for (let i = 0; i < length; i += 1) {\n    const key = keys[i];\n    output += each(key, i, length, obj[key]);\n  }\n\n  return output;\n}\n\n/**\n * Execute a helper\n * @param {object} context - Base data object\n * @param {object} helpers - Map of helper functions\n * @param {string} helperName - Name of helper to execute\n * @param {any[]} args - Array of arguments\n * @returns {string}\n */\nfunction helper(context, helpers, helperName, args) {\n  if (typeof helpers[helperName] !== 'function') {\n    return '';\n  }\n  try {\n    const out = helpers[helperName].apply(context, args);\n    return out || '';\n  } catch (e) {\n    return '';\n  }\n}\n\n/**\n * Run a compiled template function\n * @param {object} helpers - Map of helper functions\n * @param {object} context - Base data object\n * @param {function} templateFunction - Compiled template function\n * @returns {string}\n */\nfunction runtime(helpers, context, templateFunction) {\n  return guard(templateFunction(helpers, context, guard, iter, helper)).toString();\n}\n\n/* build:SERVER-ONLY:open */\n\nmodule.exports = runtime;\n\n/* build:SERVER-ONLY:close */\n\n// polyfill for Promise.try\nif (typeof Promise.try !== 'function') {\n  Promise.try = {\n    try(fn) {\n      return new Promise(resolve => resolve(fn()));\n    },\n  }.try;\n}\n"]}